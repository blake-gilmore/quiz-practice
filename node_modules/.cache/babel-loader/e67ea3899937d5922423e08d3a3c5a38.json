{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Layer Zero\\\\Side Projects\\\\Angel's Site Work\\\\Quiz\\\\quiz\\\\project\\\\src\\\\components\\\\takeQuiz\\\\takeQuiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PrintScore from \"./printScore\";\nimport PrintQuestion from \"./printQuestion\";\nimport PrintAnswers from \"./printAnswers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TakeQuiz(props) {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) setCurrentScore(currentScore + 1);\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion == props.numQuestions) setQuizCompleted(true);\n    setCurrentQuestion(nextQuestion);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"q&a-section\",\n    children: !quizCompleted ? /*#__PURE__*/_jsxDEV(PrintScore, {\n      currentScore: currentScore,\n      currentQuestion: currentQuestion,\n      scoreText: \"Final Score: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PrintQuestion, {\n        currentQuestion: currentQuestion,\n        numQuestions: props.numQuestions,\n        questions: props.questions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PrintAnswers, {\n        currentQuestion: currentQuestion,\n        questions: props.questions,\n        handleAnswers: handleAnswerOptionClick()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PrintScore, {\n        currentScore: currentScore,\n        currentQuestion: currentQuestion,\n        scoreText: \"Score: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(TakeQuiz, \"qFhclqri0xdqODCxuN2h0t1ycSk=\");\n_c = TakeQuiz;\nvar _c;\n$RefreshReg$(_c, \"TakeQuiz\");","map":{"version":3,"names":["React","useState","PrintScore","PrintQuestion","PrintAnswers","TakeQuiz","props","currentQuestion","setCurrentQuestion","currentScore","setCurrentScore","quizCompleted","setQuizCompleted","handleAnswerOptionClick","isCorrect","nextQuestion","numQuestions","questions"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/project/src/components/takeQuiz/takeQuiz.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport PrintScore from \"./printScore\";\r\nimport PrintQuestion from \"./printQuestion\";\r\nimport PrintAnswers from \"./printAnswers\";\r\n\r\nexport default function TakeQuiz(props){\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [currentScore, setCurrentScore] = useState(0);\r\n    const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n    function handleAnswerOptionClick(isCorrect){\r\n        if (isCorrect)\r\n            setCurrentScore(currentScore + 1);\r\n\r\n        var nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion == props.numQuestions)\r\n            setQuizCompleted(true);\r\n        \r\n        setCurrentQuestion(nextQuestion);\r\n    }\r\n\r\n    return(\r\n        <div className='q&a-section'>\r\n            {!quizCompleted ? \r\n                <PrintScore \r\n                    currentScore = {currentScore}\r\n                    currentQuestion = {currentQuestion}\r\n                    scoreText = {\"Final Score: \"}\r\n                />\r\n            :\r\n                <>\r\n                    <PrintQuestion \r\n                        currentQuestion = {currentQuestion}\r\n                        numQuestions = {props.numQuestions}\r\n                        questions = {props.questions}\r\n                    />\r\n                    <PrintAnswers \r\n                        currentQuestion = {currentQuestion}\r\n                        questions = {props.questions}\r\n                        handleAnswers = {handleAnswerOptionClick()}\r\n                    />\r\n                    <PrintScore \r\n                        currentScore = {currentScore}\r\n                        currentQuestion = {currentQuestion}\r\n                        scoreText = {\"Score: \"}\r\n                    />\r\n                </>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAAA;AAE1C,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAC;EAAA;EACnC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzD,SAASY,uBAAuB,CAACC,SAAS,EAAC;IACvC,IAAIA,SAAS,EACTJ,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IAErC,IAAIM,YAAY,GAAGR,eAAe,GAAG,CAAC;IACtC,IAAIQ,YAAY,IAAIT,KAAK,CAACU,YAAY,EAClCJ,gBAAgB,CAAC,IAAI,CAAC;IAE1BJ,kBAAkB,CAACO,YAAY,CAAC;EACpC;EAEA,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,UACvB,CAACJ,aAAa,gBACX,QAAC,UAAU;MACP,YAAY,EAAIF,YAAa;MAC7B,eAAe,EAAIF,eAAgB;MACnC,SAAS,EAAI;IAAgB;MAAA;MAAA;MAAA;IAAA,QAC/B,gBAEF;MAAA,wBACI,QAAC,aAAa;QACV,eAAe,EAAIA,eAAgB;QACnC,YAAY,EAAID,KAAK,CAACU,YAAa;QACnC,SAAS,EAAIV,KAAK,CAACW;MAAU;QAAA;QAAA;QAAA;MAAA,QAC/B,eACF,QAAC,YAAY;QACT,eAAe,EAAIV,eAAgB;QACnC,SAAS,EAAID,KAAK,CAACW,SAAU;QAC7B,aAAa,EAAIJ,uBAAuB;MAAG;QAAA;QAAA;QAAA;MAAA,QAC7C,eACF,QAAC,UAAU;QACP,YAAY,EAAIJ,YAAa;QAC7B,eAAe,EAAIF,eAAgB;QACnC,SAAS,EAAI;MAAU;QAAA;QAAA;QAAA;MAAA,QACzB;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QAEL;AAGd;AAAC,GA9CuBF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}