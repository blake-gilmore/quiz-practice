{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Layer Zero\\\\Side Projects\\\\Angel's Site Work\\\\Quiz\\\\quiz\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionDatabase from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [inputResponse, setInputResponse] = useState(\"\");\n  const [tempNum, setTempNum] = useState(-1);\n  const [numValue, setNumValue] = useState(-1);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [randomQuestionList, setRandomQuestionList] = useState([]);\n  function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) setCurrentScore(currentScore + 1);\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion == numValue) setQuizCompleted(true);\n    setCurrentQuestion(nextQuestion);\n  }\n  function shuffleAnswers() {\n    var answers = [];\n    for (let i = 0; i < questionDatabase[randomQuestionList[currentQuestion]].incorrectAnswers.length; i++) answers.push(questionDatabase[randomQuestionList[currentQuestion]].incorrectAnswers[i]);\n    answers.push(questionDatabase[randomQuestionList[currentQuestion]].correctAnswer);\n    let currentIndex = answers.length,\n      randomIndex;\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [answers[currentIndex], answers[randomIndex]] = [answers[randomIndex], answers[currentIndex]];\n    }\n    return answers;\n  }\n  function isNumber(str) {\n    if (str.trim() === '') {\n      return false;\n    }\n    return !isNaN(str);\n  }\n  function getData(val) {\n    setTempNum(val.target.value);\n  }\n  function handleFormSubmit() {\n    if (isNumber(tempNum) && tempNum >= 0 && tempNum <= questionDatabase.length) {\n      setNumValue(tempNum);\n      randomizeQuestions();\n    } else {\n      setInputResponse(\"Invalid entry. Please try again.\");\n    }\n  }\n  function randomizeQuestions() {\n    var fullList = [];\n    for (let i = 0; i < tempNum; i++) {\n      console.log(i);\n      fullList.push(i + 1);\n    }\n    let currentIndex = fullList.length,\n      randomIndex;\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [fullList[currentIndex], fullList[randomIndex]] = [fullList[randomIndex], fullList[currentIndex]];\n    }\n    setRandomQuestionList(prevArr => [...prevArr, fullList.slice(0, numValue + 1)]);\n    console.log(fullList.slice(0, numValue + 1));\n    return;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Test Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), numValue === -1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number-input\",\n      children: [\"Enter a number from 1-\", questionDatabase.length, \" for the number of questions in your quiz.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 106\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Question Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: getData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFormSubmit(),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), inputResponse]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"q&a-secion\",\n        children: quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-score\",\n          children: [\" Final Score: \", currentScore, \"/\", currentQuestion, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"prompt\",\n            children: \"Choose the correct answer out of the four given answers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-count\",\n              children: [\" Question \", currentQuestion + 1, \" / \", numValue, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-text\",\n              children: [\" \", questionDatabase[randomQuestionList[currentQuestion]].question, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-section\",\n            children: shuffleAnswers().map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleAnswerOptionClick(answerOption === questionDatabase[randomQuestionList[currentQuestion]].correctAnswer),\n              children: answerOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score-section\",\n            children: [\"Current Score: \", currentScore, \"/\", currentQuestion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"h546Z7U5qvD78xG8hfeK5oX5yOg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","questionDatabase","App","inputResponse","setInputResponse","tempNum","setTempNum","numValue","setNumValue","currentQuestion","setCurrentQuestion","currentScore","setCurrentScore","quizCompleted","setQuizCompleted","randomQuestionList","setRandomQuestionList","handleAnswerOptionClick","isCorrect","nextQuestion","shuffleAnswers","answers","i","incorrectAnswers","length","push","correctAnswer","currentIndex","randomIndex","Math","floor","random","isNumber","str","trim","isNaN","getData","val","target","value","handleFormSubmit","randomizeQuestions","fullList","console","log","prevArr","slice","question","map","answerOption"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/src/app.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport questionDatabase from './data';\r\n\r\nexport default function App(){\r\n    const [inputResponse, setInputResponse]=useState(\"\");\r\n    const [tempNum, setTempNum]=useState(-1);\r\n    const [numValue, setNumValue]=useState(-1);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [currentScore, setCurrentScore] = useState(0);\r\n    const [quizCompleted, setQuizCompleted] = useState(false);\r\n    const [randomQuestionList, setRandomQuestionList] = useState([]);\r\n    \r\n\r\n    function handleAnswerOptionClick(isCorrect){\r\n        if (isCorrect)\r\n            setCurrentScore(currentScore + 1);\r\n\r\n        var nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion == numValue)\r\n            setQuizCompleted(true);\r\n        \r\n        setCurrentQuestion(nextQuestion);\r\n    }\r\n\r\n    function shuffleAnswers(){\r\n        var answers = []\r\n        for (let i = 0; i < questionDatabase[randomQuestionList[currentQuestion]].incorrectAnswers.length; i++)\r\n            answers.push(questionDatabase[randomQuestionList[currentQuestion]].incorrectAnswers[i]);\r\n        \r\n        answers.push(questionDatabase[randomQuestionList[currentQuestion]].correctAnswer);\r\n\r\n        let currentIndex = answers.length,  randomIndex;\r\n        \r\n        while (currentIndex != 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            [answers[currentIndex], answers[randomIndex]] = [\r\n            answers[randomIndex], answers[currentIndex]];\r\n        }\r\n        return answers;\r\n    }\r\n\r\n    function isNumber(str){\r\n        if (str.trim() === ''){\r\n            return false;\r\n        }\r\n        return !isNaN(str);\r\n    }\r\n\r\n    function getData(val){\r\n        setTempNum(val.target.value);\r\n    }\r\n\r\n    function handleFormSubmit(){\r\n        if (isNumber(tempNum) && tempNum >= 0 && tempNum <= questionDatabase.length){\r\n            setNumValue(tempNum);\r\n            randomizeQuestions();\r\n        }\r\n        else{\r\n            setInputResponse(\"Invalid entry. Please try again.\");\r\n        }\r\n    }\r\n\r\n    function randomizeQuestions(){\r\n        var fullList = [];\r\n        for (let i = 0; i < tempNum; i++){\r\n            console.log(i);\r\n            fullList.push(i+1);\r\n        }\r\n\r\n        let currentIndex = fullList.length,  randomIndex;\r\n        while (currentIndex != 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            [fullList[currentIndex], fullList[randomIndex]] = [\r\n            fullList[randomIndex], fullList[currentIndex]];\r\n        }\r\n        setRandomQuestionList((prevArr) => [...prevArr, fullList.slice(0,numValue+1)]);\r\n        console.log(fullList.slice(0,numValue+1))\r\n        return;\r\n    }\r\n\r\n    return(\r\n        <div className='quiz-app'>\r\n            <h1>Test Quiz</h1>\r\n            {(numValue === -1) ? (\r\n                <div className='question-number-input'>\r\n                Enter a number from 1-{questionDatabase.length} for the number of questions in your quiz.<br/>\r\n                    <div className='question-input-field'>\r\n                        <label>\r\n                            Question Amount: \r\n                            <input \r\n                                type='text' \r\n                                onChange={getData}\r\n                            />\r\n                        </label>\r\n                        <button onClick={()=>handleFormSubmit()}>Submit</button>\r\n                        {inputResponse}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='quiz-screen'>\r\n                    <div className='q&a-secion'>\r\n                        {quizCompleted ? (\r\n                            <div className='final-score'> Final Score: {currentScore}/{currentQuestion} </div>\r\n                        ) : (\r\n                            <>\r\n                            <div id=\"prompt\">Choose the correct answer out of the four given answers.</div>\r\n                            <br/>\r\n                                <div className='question-section'>\r\n                                    <div className='question-count'> Question {currentQuestion+1} / {numValue} </div>\r\n                                    <div className='question-text'> {questionDatabase[randomQuestionList[currentQuestion]].question} </div>\r\n                                </div>\r\n\r\n                                <div className='answer-section'>\r\n                                    {shuffleAnswers().map((answerOption) => (\r\n                                        <button onClick={() => handleAnswerOptionClick(answerOption === questionDatabase[randomQuestionList[currentQuestion]].correctAnswer)}>\r\n                                            {answerOption}\r\n                                        </button>\r\n                                    ))} \r\n                                </div>\r\n                                <div className='score-section'>Current Score: {currentScore}/{currentQuestion}</div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,gBAAgB,MAAM,QAAQ;AAAC;AAAA;AAEtC,eAAe,SAASC,GAAG,GAAE;EAAA;EACzB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAACJ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAACR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAGhE,SAASiB,uBAAuB,CAACC,SAAS,EAAC;IACvC,IAAIA,SAAS,EACTN,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IAErC,IAAIQ,YAAY,GAAGV,eAAe,GAAG,CAAC;IACtC,IAAIU,YAAY,IAAIZ,QAAQ,EACxBO,gBAAgB,CAAC,IAAI,CAAC;IAE1BJ,kBAAkB,CAACS,YAAY,CAAC;EACpC;EAEA,SAASC,cAAc,GAAE;IACrB,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,gBAAgB,CAACc,kBAAkB,CAACN,eAAe,CAAC,CAAC,CAACc,gBAAgB,CAACC,MAAM,EAAEF,CAAC,EAAE,EAClGD,OAAO,CAACI,IAAI,CAACxB,gBAAgB,CAACc,kBAAkB,CAACN,eAAe,CAAC,CAAC,CAACc,gBAAgB,CAACD,CAAC,CAAC,CAAC;IAE3FD,OAAO,CAACI,IAAI,CAACxB,gBAAgB,CAACc,kBAAkB,CAACN,eAAe,CAAC,CAAC,CAACiB,aAAa,CAAC;IAEjF,IAAIC,YAAY,GAAGN,OAAO,CAACG,MAAM;MAAGI,WAAW;IAE/C,OAAOD,YAAY,IAAI,CAAC,EAAE;MACtBC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,YAAY,CAAC;MACtDA,YAAY,EAAE;MAEd,CAACN,OAAO,CAACM,YAAY,CAAC,EAAEN,OAAO,CAACO,WAAW,CAAC,CAAC,GAAG,CAChDP,OAAO,CAACO,WAAW,CAAC,EAAEP,OAAO,CAACM,YAAY,CAAC,CAAC;IAChD;IACA,OAAON,OAAO;EAClB;EAEA,SAASW,QAAQ,CAACC,GAAG,EAAC;IAClB,IAAIA,GAAG,CAACC,IAAI,EAAE,KAAK,EAAE,EAAC;MAClB,OAAO,KAAK;IAChB;IACA,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACtB;EAEA,SAASG,OAAO,CAACC,GAAG,EAAC;IACjB/B,UAAU,CAAC+B,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC;EAEA,SAASC,gBAAgB,GAAE;IACvB,IAAIR,QAAQ,CAAC3B,OAAO,CAAC,IAAIA,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIJ,gBAAgB,CAACuB,MAAM,EAAC;MACxEhB,WAAW,CAACH,OAAO,CAAC;MACpBoC,kBAAkB,EAAE;IACxB,CAAC,MACG;MACArC,gBAAgB,CAAC,kCAAkC,CAAC;IACxD;EACJ;EAEA,SAASqC,kBAAkB,GAAE;IACzB,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,OAAO,EAAEiB,CAAC,EAAE,EAAC;MAC7BqB,OAAO,CAACC,GAAG,CAACtB,CAAC,CAAC;MACdoB,QAAQ,CAACjB,IAAI,CAACH,CAAC,GAAC,CAAC,CAAC;IACtB;IAEA,IAAIK,YAAY,GAAGe,QAAQ,CAAClB,MAAM;MAAGI,WAAW;IAChD,OAAOD,YAAY,IAAI,CAAC,EAAE;MACtBC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,YAAY,CAAC;MACtDA,YAAY,EAAE;MAEd,CAACe,QAAQ,CAACf,YAAY,CAAC,EAAEe,QAAQ,CAACd,WAAW,CAAC,CAAC,GAAG,CAClDc,QAAQ,CAACd,WAAW,CAAC,EAAEc,QAAQ,CAACf,YAAY,CAAC,CAAC;IAClD;IACAX,qBAAqB,CAAE6B,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAEH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAACvC,QAAQ,GAAC,CAAC,CAAC,CAAC,CAAC;IAC9EoC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACI,KAAK,CAAC,CAAC,EAACvC,QAAQ,GAAC,CAAC,CAAC,CAAC;IACzC;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,EAChBA,QAAQ,KAAK,CAAC,CAAC,gBACb;MAAK,SAAS,EAAC,uBAAuB;MAAA,qCACfN,gBAAgB,CAACuB,MAAM,6DAA2C;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1F;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACjC;UAAA,4CAEI;YACI,IAAI,EAAC,MAAM;YACX,QAAQ,EAAEY;UAAQ;YAAA;YAAA;YAAA;UAAA,QACpB;QAAA;UAAA;UAAA;UAAA;QAAA,QACE,eACR;UAAQ,OAAO,EAAE,MAAII,gBAAgB,EAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,EACvDrC,aAAa;MAAA;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,gBAEN;MAAK,SAAS,EAAC,aAAa;MAAA,uBACxB;QAAK,SAAS,EAAC,YAAY;QAAA,UACtBU,aAAa,gBACV;UAAK,SAAS,EAAC,aAAa;UAAA,6BAAgBF,YAAY,OAAGF,eAAe;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,gBAElF;UAAA,wBACA;YAAK,EAAE,EAAC,QAAQ;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA+D,eAC/E;YAAA;YAAA;YAAA;UAAA,QAAK,eACD;YAAK,SAAS,EAAC,kBAAkB;YAAA,wBAC7B;cAAK,SAAS,EAAC,gBAAgB;cAAA,yBAAYA,eAAe,GAAC,CAAC,SAAKF,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAAQ,eACjF;cAAK,SAAS,EAAC,eAAe;cAAA,gBAAGN,gBAAgB,CAACc,kBAAkB,CAACN,eAAe,CAAC,CAAC,CAACsC,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QACrG,eAEN;YAAK,SAAS,EAAC,gBAAgB;YAAA,UAC1B3B,cAAc,EAAE,CAAC4B,GAAG,CAAEC,YAAY,iBAC/B;cAAQ,OAAO,EAAE,MAAMhC,uBAAuB,CAACgC,YAAY,KAAKhD,gBAAgB,CAACc,kBAAkB,CAACN,eAAe,CAAC,CAAC,CAACiB,aAAa,CAAE;cAAA,UAChIuB;YAAY;cAAA;cAAA;cAAA;YAAA,QAEpB;UAAC;YAAA;YAAA;YAAA;UAAA,QACA,eACN;YAAK,SAAS,EAAC,eAAe;YAAA,8BAAiBtC,YAAY,OAAGF,eAAe;UAAA;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;MAE3F;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA,QAEb;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEd;AAAC,GAhIuBP,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}