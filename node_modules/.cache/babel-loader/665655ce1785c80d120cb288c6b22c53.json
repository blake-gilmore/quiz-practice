{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Layer Zero\\\\Side Projects\\\\Angel's Site Work\\\\Quiz\\\\quiz\\\\src\\\\user_choice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionDatabase from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserChoice() {\n  _s();\n  const [inputResponse, setInputResponse] = useState(\"\");\n  const [numValue, setNumValue] = useState(-1);\n  function isNumber(str) {\n    if (str.trim() === '') {\n      return false;\n    }\n    return !isNaN(str);\n  }\n  function getData(val) {\n    setNumValue(val.target.value);\n  }\n  function handleFormSubmit() {\n    console.log(\"no\");\n    if (isNumber(numValue) && numValue >= 0) {\n      setNumValue(5000);\n    } else {\n      setInputResponse(\"Invalid entry. Please try again.\");\n      console.log(\"No\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-number-input\",\n    children: [\"Enter a number from 1-\", questionDatabase.length, \" for the number of questions in your quiz.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Question Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: getData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFormSubmit(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), inputResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(UserChoice, \"SQh4dLRRMIob6/S3QNz0JbauRY4=\");\n_c = UserChoice;\nvar _c;\n$RefreshReg$(_c, \"UserChoice\");","map":{"version":3,"names":["React","useState","questionDatabase","UserChoice","inputResponse","setInputResponse","numValue","setNumValue","isNumber","str","trim","isNaN","getData","val","target","value","handleFormSubmit","console","log","length"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/src/user_choice.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport questionDatabase from './data'\r\n\r\n\r\nexport default function UserChoice(){\r\n    const [inputResponse, setInputResponse]=useState(\"\");\r\n    const [numValue, setNumValue]=useState(-1);\r\n\r\n    function isNumber(str){\r\n        if (str.trim() === ''){\r\n            return false;\r\n        }\r\n\r\n        return !isNaN(str);\r\n    }\r\n\r\n    function getData(val){\r\n        setNumValue(val.target.value);\r\n    }\r\n\r\n    function handleFormSubmit(){\r\n        console.log(\"no\");\r\n        if (isNumber(numValue) && numValue >= 0){\r\n            setNumValue(5000);\r\n        }\r\n        else{\r\n            setInputResponse(\"Invalid entry. Please try again.\");\r\n            console.log(\"No\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='question-number-input'>\r\n            Enter a number from 1-{questionDatabase.length} for the number of questions in your quiz.<br/>\r\n            <div className='question-input-field'>\r\n                <label>\r\n                    Question Amount: \r\n                    <input \r\n                        type='text' \r\n                        onChange={getData}\r\n                    />\r\n                </label>\r\n                <button onClick={()=>handleFormSubmit()}>Submit</button>\r\n                {inputResponse}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,gBAAgB,MAAM,QAAQ;AAAA;AAGrC,eAAe,SAASC,UAAU,GAAE;EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAACJ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAACN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1C,SAASO,QAAQ,CAACC,GAAG,EAAC;IAClB,IAAIA,GAAG,CAACC,IAAI,EAAE,KAAK,EAAE,EAAC;MAClB,OAAO,KAAK;IAChB;IAEA,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;EACtB;EAEA,SAASG,OAAO,CAACC,GAAG,EAAC;IACjBN,WAAW,CAACM,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC;EAEA,SAASC,gBAAgB,GAAE;IACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,IAAIV,QAAQ,CAACF,QAAQ,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAC;MACpCC,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,MACG;MACAF,gBAAgB,CAAC,kCAAkC,CAAC;MACpDY,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACrB;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,uBAAuB;IAAA,qCACXhB,gBAAgB,CAACiB,MAAM,6DAA2C;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9F;MAAK,SAAS,EAAC,sBAAsB;MAAA,wBACjC;QAAA,4CAEI;UACI,IAAI,EAAC,MAAM;UACX,QAAQ,EAAEP;QAAQ;UAAA;UAAA;UAAA;QAAA,QACpB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACR;QAAQ,OAAO,EAAE,MAAII,gBAAgB,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,EACvDZ,aAAa;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA3CuBD,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}