{"ast":null,"code":"import React from 'react';\nimport questionDatabase from '../data/data';\nexport function isValidNumber(str, numQuestions) {\n  if (toString(str).trim() === '') {\n    return false;\n  }\n  if (isNaN(str)) {\n    return false;\n  }\n  return str > 0 && str <= numQuestions;\n}\nexport function RandomizeQuestions(newValue) {\n  console.log(newValue);\n  var fullList = [];\n  var qList = [];\n  for (let i = 0; i < questionDatabase.length; i++) {\n    for (let j = 0; j < questionDatabase[i].sectionContent.length; j++) fullList.push(i + 1);\n    let currentIndex = fullList.length,\n      randomIndex;\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [fullList[currentIndex], fullList[randomIndex]] = [fullList[randomIndex], fullList[currentIndex]];\n    }\n    for (let j = 0; j < newValue.value; j++) {\n      qList.push(questionDatabase[i].sectionContent[fullList[j]]);\n      console.log(questionDatabase[i].sectionContent[fullList[j]]);\n    }\n  }\n  console.log(qList);\n  return qList;\n}\n_c = RandomizeQuestions;\nexport function shuffleAnswers(questions, currentQuestion) {\n  var answers = [];\n  for (let i = 0; i < questionDatabase[questions[currentQuestion] - 1].incorrectAnswers.length; i++) answers.push(questionDatabase[questions[currentQuestion] - 1].incorrectAnswers[i]);\n  answers.push(questionDatabase[questions[currentQuestion] - 1].correctAnswer);\n  let currentIndex = answers.length,\n    randomIndex;\n  while (currentIndex != 0) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n    [answers[currentIndex], answers[randomIndex]] = [answers[randomIndex], answers[currentIndex]];\n  }\n  return answers;\n}\nvar _c;\n$RefreshReg$(_c, \"RandomizeQuestions\");","map":{"version":3,"names":["React","questionDatabase","isValidNumber","str","numQuestions","toString","trim","isNaN","RandomizeQuestions","newValue","console","log","fullList","qList","i","length","j","sectionContent","push","currentIndex","randomIndex","Math","floor","random","value","shuffleAnswers","questions","currentQuestion","answers","incorrectAnswers","correctAnswer"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/project/src/components/library/functions.jsx"],"sourcesContent":["import React from 'react';\r\nimport questionDatabase from '../data/data';\r\n\r\n\r\nexport function isValidNumber(str, numQuestions){\r\n\r\n    if (toString(str).trim() === ''){\r\n        return false;\r\n    }\r\n    if (isNaN(str)){\r\n        return false;\r\n    }\r\n    return (str > 0 && str <= numQuestions);\r\n}\r\n\r\nexport function RandomizeQuestions(newValue){\r\n    console.log(newValue);\r\n    var fullList = [];\r\n    var qList = [];\r\n    for (let i = 0; i < questionDatabase.length; i++){\r\n        for (let j = 0; j < questionDatabase[i].sectionContent.length; j++)\r\n            fullList.push(i+1);\r\n\r\n        let currentIndex = fullList.length,  randomIndex;\r\n        while (currentIndex != 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            [fullList[currentIndex], fullList[randomIndex]] = [\r\n            fullList[randomIndex], fullList[currentIndex]];\r\n        }\r\n        for (let j = 0; j < newValue.value; j++){\r\n            qList.push(questionDatabase[i].sectionContent[fullList[j]]);\r\n            console.log(questionDatabase[i].sectionContent[fullList[j]])\r\n        }\r\n    }\r\n    \r\n\r\n    console.log(qList);\r\n    return qList;\r\n}\r\n\r\nexport function shuffleAnswers(questions, currentQuestion){\r\n    var answers = []\r\n    for (let i = 0; i < questionDatabase[questions[currentQuestion]-1].incorrectAnswers.length; i++)\r\n        answers.push(questionDatabase[questions[currentQuestion]-1].incorrectAnswers[i]);\r\n    \r\n    answers.push(questionDatabase[questions[currentQuestion]-1].correctAnswer);\r\n\r\n    let currentIndex = answers.length,  randomIndex;\r\n    \r\n    while (currentIndex != 0) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n    \r\n        [answers[currentIndex], answers[randomIndex]] = [\r\n        answers[randomIndex], answers[currentIndex]];\r\n    }\r\n    return answers;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}