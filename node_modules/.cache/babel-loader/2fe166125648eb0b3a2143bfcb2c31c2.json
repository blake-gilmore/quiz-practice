{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Layer Zero\\\\Side Projects\\\\Angel's Site Work\\\\Quiz\\\\quiz\\\\src\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport questionDatabase from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  function handleAnswerOptionClick(isCorrect) {\n    if (isCorrect) setCurrentScore(currentScore + 1);\n    var nextQuestion = currentQuestion + 1;\n    if (nextQuestion == questionDatabase.length) setQuizCompleted(true);\n    setCurrentQuestion(nextQuestion);\n  }\n\n  //Builds array with all answers of current question and shuffles it\n  function shuffleAnswers() {\n    //fill answers array with all incorrect answers and correct answer\n    var answers = [];\n    for (let i = 0; i < questionDatabase[currentQuestion].incorrectAnswers.length; i++) answers.push(questionDatabase[currentQuestion].incorrectAnswers[i]);\n    answers.push(questionDatabase[currentQuestion].correctAnswer);\n    let currentIndex = answers.length,\n      randomIndex;\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [answers[currentIndex], answers[randomIndex]] = [answers[randomIndex], answers[currentIndex]];\n    }\n    return answers;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q&a-secion\",\n      children: quizCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"final-score\",\n        children: [\"Final Score: \", currentScore, \"/\", currentQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"prompt\",\n          children: \"Choose the correct answer out of the four given answers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-count\",\n            children: [\" Question \", currentQuestion + 1, \" / \", questionDatabase.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: [\" \", questionDatabase[currentQuestion].question, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer-section\",\n          children: shuffleAnswers().map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerOptionClick(answerOption === questionDatabase[currentQuestion].correctAnswer),\n            children: answerOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-section\",\n          children: [\"Current Score: \", currentScore, \"/\", currentQuestion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"qFhclqri0xdqODCxuN2h0t1ycSk=\");\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","questionDatabase","Quiz","currentQuestion","setCurrentQuestion","currentScore","setCurrentScore","quizCompleted","setQuizCompleted","handleAnswerOptionClick","isCorrect","nextQuestion","length","shuffleAnswers","answers","i","incorrectAnswers","push","correctAnswer","currentIndex","randomIndex","Math","floor","random","question","map","answerOption"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/src/quiz.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport questionDatabase from './data'\r\n\r\nexport default function Quiz(){\r\n    \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [currentScore, setCurrentScore] = useState(0);\r\n    const [quizCompleted, setQuizCompleted] = useState(false);\r\n    \r\n\r\n    function handleAnswerOptionClick(isCorrect){\r\n        if (isCorrect)\r\n            setCurrentScore(currentScore + 1);\r\n\r\n        var nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion == questionDatabase.length)\r\n            setQuizCompleted(true);\r\n        \r\n        setCurrentQuestion(nextQuestion);\r\n    }\r\n\r\n    //Builds array with all answers of current question and shuffles it\r\n    function shuffleAnswers()\r\n    {\r\n        //fill answers array with all incorrect answers and correct answer\r\n        var answers = []\r\n        for (let i = 0; i < questionDatabase[currentQuestion].incorrectAnswers.length; i++)\r\n            answers.push(questionDatabase[currentQuestion].incorrectAnswers[i]);\r\n        \r\n        answers.push(questionDatabase[currentQuestion].correctAnswer);\r\n\r\n        let currentIndex = answers.length,  randomIndex;\r\n        \r\n        while (currentIndex != 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            [answers[currentIndex], answers[randomIndex]] = [\r\n            answers[randomIndex], answers[currentIndex]];\r\n        }\r\n\r\n        return answers;\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='quiz-screen'>\r\n            <div className='q&a-secion'>\r\n                {quizCompleted ? (\r\n                    <div className='final-score'>\r\n                        Final Score: {currentScore}/{currentQuestion}\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                    <div id=\"prompt\">Choose the correct answer out of the four given answers.</div>\r\n                    <br></br>\r\n                        <div className='question-section'>\r\n                            <div className='question-count'> Question {currentQuestion+1} / {questionDatabase.length} </div>\r\n                            <div className='question-text'> {questionDatabase[currentQuestion].question} </div>\r\n                        </div>\r\n\r\n                        <div className='answer-section'>\r\n                            {shuffleAnswers().map((answerOption) => (\r\n                                <button onClick={() => handleAnswerOptionClick(answerOption === questionDatabase[currentQuestion].correctAnswer)}>\r\n                                    {answerOption}\r\n                                </button>\r\n                            ))} \r\n                        </div>\r\n\r\n                        <div className='score-section'>\r\n                            Current Score: {currentScore}/{currentQuestion}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,gBAAgB,MAAM,QAAQ;AAAA;AAAA;AAErC,eAAe,SAASC,IAAI,GAAE;EAAA;EAE1B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAGzD,SAASS,uBAAuB,CAACC,SAAS,EAAC;IACvC,IAAIA,SAAS,EACTJ,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IAErC,IAAIM,YAAY,GAAGR,eAAe,GAAG,CAAC;IACtC,IAAIQ,YAAY,IAAIV,gBAAgB,CAACW,MAAM,EACvCJ,gBAAgB,CAAC,IAAI,CAAC;IAE1BJ,kBAAkB,CAACO,YAAY,CAAC;EACpC;;EAEA;EACA,SAASE,cAAc,GACvB;IACI;IACA,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,gBAAgB,CAACE,eAAe,CAAC,CAACa,gBAAgB,CAACJ,MAAM,EAAEG,CAAC,EAAE,EAC9ED,OAAO,CAACG,IAAI,CAAChB,gBAAgB,CAACE,eAAe,CAAC,CAACa,gBAAgB,CAACD,CAAC,CAAC,CAAC;IAEvED,OAAO,CAACG,IAAI,CAAChB,gBAAgB,CAACE,eAAe,CAAC,CAACe,aAAa,CAAC;IAE7D,IAAIC,YAAY,GAAGL,OAAO,CAACF,MAAM;MAAGQ,WAAW;IAE/C,OAAOD,YAAY,IAAI,CAAC,EAAE;MACtBC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,YAAY,CAAC;MACtDA,YAAY,EAAE;MAEd,CAACL,OAAO,CAACK,YAAY,CAAC,EAAEL,OAAO,CAACM,WAAW,CAAC,CAAC,GAAG,CAChDN,OAAO,CAACM,WAAW,CAAC,EAAEN,OAAO,CAACK,YAAY,CAAC,CAAC;IAChD;IAEA,OAAOL,OAAO;EAClB;EAGA,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,uBACxB;MAAK,SAAS,EAAC,YAAY;MAAA,UACtBP,aAAa,gBACV;QAAK,SAAS,EAAC,aAAa;QAAA,4BACVF,YAAY,OAAGF,eAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1C,gBAEN;QAAA,wBACA;UAAK,EAAE,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA+D,eAC/E;UAAA;UAAA;UAAA;QAAA,QAAS,eACL;UAAK,SAAS,EAAC,kBAAkB;UAAA,wBAC7B;YAAK,SAAS,EAAC,gBAAgB;YAAA,yBAAYA,eAAe,GAAC,CAAC,SAAKF,gBAAgB,CAACW,MAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QAAQ,eAChG;YAAK,SAAS,EAAC,eAAe;YAAA,gBAAGX,gBAAgB,CAACE,eAAe,CAAC,CAACqB,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACjF,eAEN;UAAK,SAAS,EAAC,gBAAgB;UAAA,UAC1BX,cAAc,EAAE,CAACY,GAAG,CAAEC,YAAY,iBAC/B;YAAQ,OAAO,EAAE,MAAMjB,uBAAuB,CAACiB,YAAY,KAAKzB,gBAAgB,CAACE,eAAe,CAAC,CAACe,aAAa,CAAE;YAAA,UAC5GQ;UAAY;YAAA;YAAA;YAAA;UAAA,QAEpB;QAAC;UAAA;UAAA;UAAA;QAAA,QACA,eAEN;UAAK,SAAS,EAAC,eAAe;UAAA,8BACVrB,YAAY,OAAGF,eAAe;QAAA;UAAA;UAAA;UAAA;QAAA,QAC5C;MAAA;IAEb;MAAA;MAAA;MAAA;IAAA;EACC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA1EuBD,IAAI;AAAA,KAAJA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}