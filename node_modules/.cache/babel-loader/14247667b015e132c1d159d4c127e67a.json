{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Layer Zero\\\\Side Projects\\\\Angel's Site Work\\\\Quiz\\\\quiz\\\\project\\\\src\\\\components\\\\makeSelections\\\\questionSelections.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InputBox from './inputBox';\nimport { isValidNumber } from '../library/functions';\nimport questionDatabase from '../data/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionSelections(props) {\n  _s();\n  const [tempNum, setTempNum] = useState(questionDatabase.map(section => ({\n    id: section.id,\n    value: 0,\n    inputResponse: '',\n    questions: section.sectionContent.length\n  })));\n  const [isValid, setIsValid] = useState(true);\n  const [validNums, setValidNums] = useState([]);\n  function getData(val, idIn) {\n    setTempNum(tempNum.map(num =>\n    // Here you accept a id argument to the function and replace it with hard coded ðŸ¤ª 2, to make it dynamic.\n    num.id === idIn ? {\n      ...num,\n      value: val\n    } : {\n      ...num\n    }));\n  }\n  function handleFormSubmit() {\n    var boolArr = tempNum.map(num => isValidNumber(num.value, num.questions));\n    var canContinue = true;\n    for (let i = 0; i < boolArr.length; i++) {\n      if (!boolArr[i]) {\n        tempNum[i].inputResponse = \" Invalid number of questions for this section.\";\n        canContinue = false;\n      } else tempNum[i].inputResponse = \"\";\n    }\n    setValidNums(boolArr);\n    setIsValid(true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [questionDatabase.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-question-number-prompt\",\n      children: [/*#__PURE__*/_jsxDEV(InputBox, {\n        label: section.sectionTitle,\n        numQuestions: section.sectionContent.length,\n        sectionContent: section.sectionContent,\n        onChange: getData,\n        id: section.id,\n        inputResponse: tempNum[section.id - 1].inputResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFormSubmit(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(QuestionSelections, \"HhNN1JrCzjJWbVWv7sqjPU5TAUA=\");\n_c = QuestionSelections;\nvar _c;\n$RefreshReg$(_c, \"QuestionSelections\");","map":{"version":3,"names":["React","useState","InputBox","isValidNumber","questionDatabase","QuestionSelections","props","tempNum","setTempNum","map","section","id","value","inputResponse","questions","sectionContent","length","isValid","setIsValid","validNums","setValidNums","getData","val","idIn","num","handleFormSubmit","boolArr","canContinue","i","sectionTitle"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/project/src/components/makeSelections/questionSelections.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport InputBox from './inputBox';\r\nimport { isValidNumber} from '../library/functions';\r\nimport questionDatabase from '../data/data';\r\n\r\n\r\nexport default function QuestionSelections(props){\r\n    const [tempNum, setTempNum]=useState(questionDatabase.map((section) => ({id: section.id, value: 0, inputResponse: '', questions: section.sectionContent.length})));\r\n    const [isValid, setIsValid] = useState(true);\r\n    const [validNums, setValidNums] = useState([]);\r\n\r\n    function getData(val, idIn){\r\n        setTempNum(\r\n            tempNum.map((num) =>\r\n                // Here you accept a id argument to the function and replace it with hard coded ðŸ¤ª 2, to make it dynamic.\r\n                num.id === idIn\r\n                    ? { ...num, value: val }\r\n                    : { ...num }\r\n            )\r\n        );\r\n    }\r\n\r\n    function handleFormSubmit(){\r\n        var boolArr = tempNum.map((num) => isValidNumber(num.value, num.questions))\r\n        var canContinue = true;\r\n        \r\n        for (let i = 0; i < boolArr.length; i++){\r\n            if (!boolArr[i]){\r\n                tempNum[i].inputResponse = \" Invalid number of questions for this section.\";\r\n                canContinue = false;\r\n            }\r\n            else\r\n                tempNum[i].inputResponse = \"\";\r\n        }\r\n        setValidNums(boolArr);\r\n        setIsValid(true);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {questionDatabase.map((section) => (\r\n                <div className='section-question-number-prompt'>\r\n                    <InputBox \r\n                        label = {section.sectionTitle}\r\n                        numQuestions = {section.sectionContent.length}\r\n                        sectionContent = {section.sectionContent}\r\n                        onChange = {getData}\r\n                        id = {section.id}\r\n                        inputResponse = {tempNum[section.id-1].inputResponse}\r\n                    />\r\n                    <br/>\r\n                </div>\r\n            ))}\r\n    \r\n            <button onClick={()=>handleFormSubmit()}>Submit</button>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,aAAa,QAAO,sBAAsB;AACnD,OAAOC,gBAAgB,MAAM,cAAc;AAAC;AAAA;AAG5C,eAAe,SAASC,kBAAkB,CAACC,KAAK,EAAC;EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAACP,QAAQ,CAACG,gBAAgB,CAACK,GAAG,CAAEC,OAAO,KAAM;IAACC,EAAE,EAAED,OAAO,CAACC,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,aAAa,EAAE,EAAE;IAAEC,SAAS,EAAEJ,OAAO,CAACK,cAAc,CAACC;EAAM,CAAC,CAAC,CAAC,CAAC;EAClK,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE9C,SAASoB,OAAO,CAACC,GAAG,EAAEC,IAAI,EAAC;IACvBf,UAAU,CACND,OAAO,CAACE,GAAG,CAAEe,GAAG;IACZ;IACAA,GAAG,CAACb,EAAE,KAAKY,IAAI,GACT;MAAE,GAAGC,GAAG;MAAEZ,KAAK,EAAEU;IAAI,CAAC,GACtB;MAAE,GAAGE;IAAI,CAAC,CACnB,CACJ;EACL;EAEA,SAASC,gBAAgB,GAAE;IACvB,IAAIC,OAAO,GAAGnB,OAAO,CAACE,GAAG,CAAEe,GAAG,IAAKrB,aAAa,CAACqB,GAAG,CAACZ,KAAK,EAAEY,GAAG,CAACV,SAAS,CAAC,CAAC;IAC3E,IAAIa,WAAW,GAAG,IAAI;IAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACV,MAAM,EAAEY,CAAC,EAAE,EAAC;MACpC,IAAI,CAACF,OAAO,CAACE,CAAC,CAAC,EAAC;QACZrB,OAAO,CAACqB,CAAC,CAAC,CAACf,aAAa,GAAG,gDAAgD;QAC3Ec,WAAW,GAAG,KAAK;MACvB,CAAC,MAEGpB,OAAO,CAACqB,CAAC,CAAC,CAACf,aAAa,GAAG,EAAE;IACrC;IACAO,YAAY,CAACM,OAAO,CAAC;IACrBR,UAAU,CAAC,IAAI,CAAC;EACpB;EAEA,oBACI;IAAA,WACKd,gBAAgB,CAACK,GAAG,CAAEC,OAAO,iBAC1B;MAAK,SAAS,EAAC,gCAAgC;MAAA,wBAC3C,QAAC,QAAQ;QACL,KAAK,EAAIA,OAAO,CAACmB,YAAa;QAC9B,YAAY,EAAInB,OAAO,CAACK,cAAc,CAACC,MAAO;QAC9C,cAAc,EAAIN,OAAO,CAACK,cAAe;QACzC,QAAQ,EAAIM,OAAQ;QACpB,EAAE,EAAIX,OAAO,CAACC,EAAG;QACjB,aAAa,EAAIJ,OAAO,CAACG,OAAO,CAACC,EAAE,GAAC,CAAC,CAAC,CAACE;MAAc;QAAA;QAAA;QAAA;MAAA,QACvD,eACF;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAEZ,CAAC,eAEF;MAAQ,OAAO,EAAE,MAAIY,gBAAgB,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA,gBACzD;AAEX;AAAC,GAnDuBpB,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}