{"ast":null,"code":"import _slicedToArray from\"D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import questionDatabase from'./data';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Quiz(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentQuestion=_useState2[0],setCurrentQuestion=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentScore=_useState4[0],setCurrentScore=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),quizCompleted=_useState6[0],setQuizCompleted=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showCorrectAnswer=_useState8[0],setShowCorrectAnswer=_useState8[1];function handleAnswerOptionClick(isCorrect){if(isCorrect)setCurrentScore(currentScore+1);var nextQuestion=currentQuestion+1;if(nextQuestion==questionDatabase.length)setQuizCompleted(true);setCurrentQuestion(nextQuestion);}//Builds array with all answers of current question and shuffles it\nfunction shuffleAnswers(){//fill answers array with all incorrect answers and correct answer\nvar answers=[];for(var i=0;i<questionDatabase[currentQuestion].incorrectAnswers.length;i++){answers.push(questionDatabase[currentQuestion].incorrectAnswers[i]);}answers.push(questionDatabase[currentQuestion].correctAnswer);var currentIndex=answers.length,randomIndex;while(currentIndex!=0){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;var _ref=[answers[randomIndex],answers[currentIndex]];answers[currentIndex]=_ref[0];answers[randomIndex]=_ref[1];}return answers;}return/*#__PURE__*/_jsx(\"div\",{className:\"quiz-screen\",children:quizCompleted?/*#__PURE__*/_jsxs(\"div\",{className:\"final-score\",children:[\"Final Score: \",currentScore,\"/\",currentQuestion]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-count\",children:[\" Question \",currentQuestion+1,\" / \",questionDatabase.length,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-text\",children:[\" \",questionDatabase[currentQuestion].question,\" \"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"answer-section\",children:shuffleAnswers().map(function(answerOption){return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleAnswerOptionClick(answerOption===questionDatabase[currentQuestion].correctAnswer);},children:answerOption});})}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-section\",children:[\"Current Score: \",currentScore,\"/\",currentQuestion]})]})});}","map":{"version":3,"names":["React","useState","questionDatabase","Quiz","currentQuestion","setCurrentQuestion","currentScore","setCurrentScore","quizCompleted","setQuizCompleted","showCorrectAnswer","setShowCorrectAnswer","handleAnswerOptionClick","isCorrect","nextQuestion","length","shuffleAnswers","answers","i","incorrectAnswers","push","correctAnswer","currentIndex","randomIndex","Math","floor","random","question","map","answerOption"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/src/quiz.js"],"sourcesContent":["import React, {useState} from 'react'\r\nimport questionDatabase from './data'\r\n\r\nexport default function Quiz(){\r\n    \r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [currentScore, setCurrentScore] = useState(0);\r\n    const [quizCompleted, setQuizCompleted] = useState(false);\r\n    const [showCorrectAnswer, setShowCorrectAnswer] = useState(false);\r\n    \r\n\r\n    function handleAnswerOptionClick(isCorrect){\r\n        if (isCorrect)\r\n            setCurrentScore(currentScore + 1);\r\n\r\n        var nextQuestion = currentQuestion + 1;\r\n        if (nextQuestion == questionDatabase.length)\r\n            setQuizCompleted(true);\r\n        \r\n        setCurrentQuestion(nextQuestion);\r\n    }\r\n\r\n    //Builds array with all answers of current question and shuffles it\r\n    function shuffleAnswers()\r\n    {\r\n        //fill answers array with all incorrect answers and correct answer\r\n        var answers = []\r\n        for (let i = 0; i < questionDatabase[currentQuestion].incorrectAnswers.length; i++)\r\n            answers.push(questionDatabase[currentQuestion].incorrectAnswers[i]);\r\n        \r\n        answers.push(questionDatabase[currentQuestion].correctAnswer);\r\n\r\n        let currentIndex = answers.length,  randomIndex;\r\n        \r\n        while (currentIndex != 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n        \r\n            [answers[currentIndex], answers[randomIndex]] = [\r\n            answers[randomIndex], answers[currentIndex]];\r\n        }\r\n\r\n        return answers;\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='quiz-screen'>\r\n            {quizCompleted ? (\r\n                <div className='final-score'>\r\n                    Final Score: {currentScore}/{currentQuestion}\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className='question-section'>\r\n                        <div className='question-count'> Question {currentQuestion+1} / {questionDatabase.length} </div>\r\n                        <div className='question-text'> {questionDatabase[currentQuestion].question} </div>\r\n                    </div>\r\n\r\n                    <div className='answer-section'>\r\n                        {shuffleAnswers().map((answerOption) => (\r\n                            <button onClick={() => handleAnswerOptionClick(answerOption === questionDatabase[currentQuestion].correctAnswer)}>\r\n                                {answerOption}\r\n                            </button>\r\n                        ))} \r\n                    </div>\r\n\r\n                    <div className='score-section'>\r\n                        Current Score: {currentScore}/{currentQuestion}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}"],"mappings":"oJAAA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CACrC,MAAOC,iBAAgB,KAAM,QAAQ,8IAErC,cAAe,SAASC,KAAI,EAAE,CAE1B,cAA8CF,QAAQ,CAAC,CAAC,CAAC,wCAAlDG,eAAe,eAAEC,kBAAkB,eAC1C,eAAwCJ,QAAQ,CAAC,CAAC,CAAC,yCAA5CK,YAAY,eAAEC,eAAe,eACpC,eAA0CN,QAAQ,CAAC,KAAK,CAAC,yCAAlDO,aAAa,eAAEC,gBAAgB,eACtC,eAAkDR,QAAQ,CAAC,KAAK,CAAC,yCAA1DS,iBAAiB,eAAEC,oBAAoB,eAG9C,QAASC,wBAAuB,CAACC,SAAS,CAAC,CACvC,GAAIA,SAAS,CACTN,eAAe,CAACD,YAAY,CAAG,CAAC,CAAC,CAErC,GAAIQ,aAAY,CAAGV,eAAe,CAAG,CAAC,CACtC,GAAIU,YAAY,EAAIZ,gBAAgB,CAACa,MAAM,CACvCN,gBAAgB,CAAC,IAAI,CAAC,CAE1BJ,kBAAkB,CAACS,YAAY,CAAC,CACpC,CAEA;AACA,QAASE,eAAc,EACvB,CACI;AACA,GAAIC,QAAO,CAAG,EAAE,CAChB,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGhB,gBAAgB,CAACE,eAAe,CAAC,CAACe,gBAAgB,CAACJ,MAAM,CAAEG,CAAC,EAAE,EAC9ED,OAAO,CAACG,IAAI,CAAClB,gBAAgB,CAACE,eAAe,CAAC,CAACe,gBAAgB,CAACD,CAAC,CAAC,CAAC,CAAC,CAExED,OAAO,CAACG,IAAI,CAAClB,gBAAgB,CAACE,eAAe,CAAC,CAACiB,aAAa,CAAC,CAE7D,GAAIC,aAAY,CAAGL,OAAO,CAACF,MAAM,CAAGQ,WAAW,CAE/C,MAAOD,YAAY,EAAI,CAAC,CAAE,CACtBC,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGJ,YAAY,CAAC,CACtDA,YAAY,EAAE,CAAC,SAEiC,CAChDL,OAAO,CAACM,WAAW,CAAC,CAAEN,OAAO,CAACK,YAAY,CAAC,CAAC,CAD3CL,OAAO,CAACK,YAAY,CAAC,SAAEL,OAAO,CAACM,WAAW,CAAC,SAEhD,CAEA,MAAON,QAAO,CAClB,CAGA,mBACI,YAAK,SAAS,CAAC,aAAa,UACvBT,aAAa,cACV,aAAK,SAAS,CAAC,aAAa,2BACVF,YAAY,KAAGF,eAAe,GAC1C,cAEN,wCACI,aAAK,SAAS,CAAC,kBAAkB,wBAC7B,aAAK,SAAS,CAAC,gBAAgB,wBAAYA,eAAe,CAAC,CAAC,OAAKF,gBAAgB,CAACa,MAAM,OAAQ,cAChG,aAAK,SAAS,CAAC,eAAe,eAAGb,gBAAgB,CAACE,eAAe,CAAC,CAACuB,QAAQ,OAAQ,GACjF,cAEN,YAAK,SAAS,CAAC,gBAAgB,UAC1BX,cAAc,EAAE,CAACY,GAAG,CAAC,SAACC,YAAY,qBAC/B,eAAQ,OAAO,CAAE,yBAAMjB,wBAAuB,CAACiB,YAAY,GAAK3B,gBAAgB,CAACE,eAAe,CAAC,CAACiB,aAAa,CAAC,EAAC,UAC5GQ,YAAY,EACR,EACZ,CAAC,EACA,cAEN,aAAK,SAAS,CAAC,eAAe,6BACVvB,YAAY,KAAGF,eAAe,GAC5C,GAEb,EACC,CAEd"},"metadata":{},"sourceType":"module"}