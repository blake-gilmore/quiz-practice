{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\Layer Zero\\\\Side Projects\\\\Angel's Site Work\\\\Quiz\\\\quiz\\\\project\\\\src\\\\components\\\\makeSelections\\\\questionSelections.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InputBox from './inputBox';\nimport { isNumber } from '../library/functions';\nimport questionDatabase from '../data/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionSelections(props) {\n  _s();\n  const [inputResponse, setInputResponse] = useState(\"\");\n  const [tempNum, setTempNum] = useState(-1);\n  function getData(val) {\n    setTempNum(val.target.value);\n  }\n  function handleFormSubmit() {\n    if (isNumber(tempNum) && tempNum >= 0 && tempNum <= questionDatabase.length) props.setNumQuestions(tempNum);else setInputResponse(\"Invalid entry. Please try again.\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputBox, {\n      label: \"Question Amount: \",\n      onChange: getData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleFormSubmit(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), inputResponse]\n  }, void 0, true);\n}\n_s(QuestionSelections, \"oXdfFOCCigqPMQT09Bffhw9J5kw=\");\n_c = QuestionSelections;\nvar _c;\n$RefreshReg$(_c, \"QuestionSelections\");","map":{"version":3,"names":["React","useState","InputBox","isNumber","questionDatabase","QuestionSelections","props","inputResponse","setInputResponse","tempNum","setTempNum","getData","val","target","value","handleFormSubmit","length","setNumQuestions"],"sources":["D:/School/Layer Zero/Side Projects/Angel's Site Work/Quiz/quiz/project/src/components/makeSelections/questionSelections.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport InputBox from './inputBox';\r\nimport { isNumber } from '../library/functions';\r\nimport questionDatabase from '../data/data';\r\n\r\n\r\nexport default function QuestionSelections(props){\r\n    const [inputResponse, setInputResponse]=useState(\"\");\r\n    const [tempNum, setTempNum]=useState(-1);\r\n\r\n    function getData(val){\r\n        setTempNum(val.target.value);\r\n    }\r\n\r\n    function handleFormSubmit(){\r\n        if (isNumber(tempNum) && tempNum >= 0 && tempNum <= questionDatabase.length)\r\n            props.setNumQuestions(tempNum);\r\n        else\r\n            setInputResponse(\"Invalid entry. Please try again.\");\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <InputBox \r\n                label = \"Question Amount: \"\r\n                onChange = {getData()}\r\n            />\r\n            <button onClick={()=>handleFormSubmit()}>Submit</button>\r\n            {inputResponse}\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAOC,gBAAgB,MAAM,cAAc;AAAC;AAAA;AAG5C,eAAe,SAASC,kBAAkB,CAACC,KAAK,EAAC;EAAA;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAACT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,SAASU,OAAO,CAACC,GAAG,EAAC;IACjBF,UAAU,CAACE,GAAG,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC;EAEA,SAASC,gBAAgB,GAAE;IACvB,IAAIZ,QAAQ,CAACM,OAAO,CAAC,IAAIA,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIL,gBAAgB,CAACY,MAAM,EACvEV,KAAK,CAACW,eAAe,CAACR,OAAO,CAAC,CAAC,KAE/BD,gBAAgB,CAAC,kCAAkC,CAAC;EAC5D;EAEA,oBACI;IAAA,wBACI,QAAC,QAAQ;MACL,KAAK,EAAG,mBAAmB;MAC3B,QAAQ,EAAIG,OAAO;IAAG;MAAA;MAAA;MAAA;IAAA,QACxB,eACF;MAAQ,OAAO,EAAE,MAAII,gBAAgB,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,EACvDR,aAAa;EAAA,gBACf;AAEX;AAAC,GAzBuBF,kBAAkB;AAAA,KAAlBA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}